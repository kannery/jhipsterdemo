//product / services table
//relationship is explained down
entity ProductServiceDef {
	name String,
    remarks String,
}

entity ProductCategory {
	name String,
    remarks String,
}

//prodScreenDisplay flag - 0 for not showing at UI
//dataEntryDisplay flag - 0 for not showing at UI
entity ProdDefConfig{
	prodColName String,
	prodScreenFlag Integer,
	dataEntryFlag Integer,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}

entity CompanyDebts {
    debtType String,
    debtDesc String,
    debtAmount Double,
    annualInterest Double,
    effectiveDate LocalDate,
    paymentStartDate LocalDate,
    paymentEndDate LocalDate,
    noOfPayments Integer,
    debtTerm Integer
}
// delayed / prepayed amount can be 
// updated in this table
entity CompanyDebtsAmortize {
	paymentDate LocalDate,
    paymentAmount Double,
    interestAmount Double,
    principalAmount Double,
    outStandingAmount Double,
}

entity CompanyAssets {
    assetCategory String,
    assetId String,
    assetDesc String,
    purchaseDate LocalDate,
    quantity Double,
    rate Double,
    expectedLife String,
    noExpiryFlag String,
    salvageValue Double,
    assetType String,
    budgetId Long,
}

entity CompanyAssetsMaintenance {
	maintenanceDate LocalDate,
    maintenanceType String,
    maintenanceValue Double,
    maintenanceQty Double
}
//budgetCategory - Expense, Asset, Liability
//budgetPeriod can be month wise or quarter wise
//eventDate - this will help us to include in the respective stmts.
entity CompanyBudget {
    budgetCategory String,
    buegetId String,
    budgetItem String,
    budgetDesc String,
	budgetPeriod String,
}
//this one stores multiple records for each
//budget entry for expense and libility
entity CompanyBudgetData {
    budgetValue Double,
    eventDate LocalDate,
}

entity CompanyAssetsAccuDep {
	accuDepDate LocalDate,
    totalDepExpenseValue Double,
    accuDep Double,
    totalBookValue Double
}

entity ProdKeyValue{
	prodId Long,
    prodKey String,
    prodValue String
}

entity MarketChannelAddlFields{

}

//market price channels
entity MarketPriceDef{
	name String,
	marketChannels String,
	marketLocations String,
	marketSegments String,
	gender String,
	age String,
	seasons String,
	priceRanges String
}
//case data goes into report value master
//that will have all information
//this table is used for storing scenarios other than
//each doodil entry has. 
//one entry in this table and the data for the new scenario
//will get stored in report value master / data/ value config tables
//if its already there in those tables as part of doodil entry
//then a case id will get updated in the master table
//once they publish from there doodil entry
entity DoodilCases{
	name String,
    desc String,
    caseType String,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}

//refId IS - 1, BS - 2, CF - 3, product - 4
//multiple products - product will be
//linked to marketpricedef, genprocess chain
entity DoodilEntryData{
    refId Integer,
    quantity Double,
    quantityUnit String,
    cost Double,
    qtyDiff Double,
    costDiff Double,
    createTime ZonedDateTime,
    updateTime ZonedDateTime    
}

entity DoodilEntryMarketData{
	
}

//qty diff and price diff are the percentage difference between actual and the override
entity DoodilEntryPrices{
	quantity Double,
    price Double,
    qtyDiff Double,
    priceDiff Double,
    totalCostBefMargin Double,
    pricingMarginPercent Double,
    finalCost Double,
    suggestedPrice Double,
    createTime ZonedDateTime,
    updateTime ZonedDateTime    
}

entity DoodilEntryProcessChains{
	refKey String,
    processFlag String
}

entity DoodilEntry{
	name String,
    desc String,
    period String,
    periodYear String,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}

//extended information about user
//which industry user / company belogs to
//one to one relationship with user
entity CompanyInfo{
	companyName String,
    address String,
    companyLogoPath String,
    industry String,
    phoneNumber String,
    serviceOffers String,
    saleChannel String,
    reportingCurrency String,
    acctYear String,
    stmtFrequency String,
    businessDuration String,
    prodPriceStability String,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}
//userType - Standard, Admin, Super User
entity CompanyUsers{
	userType String,
}

//category - 1 - quantity, 2 - price, 3 - cost
entity GenProcessChains{
    chainName String,
    chainDesc String,
    subProcessFlag String,
    category Integer,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}

entity ProductPalette{
    productCol String
}

entity ProductProcessChains{

}

entity MarketProcessChains{

}

entity MarketChannelProducts{

}

entity GPChainFormulaVars{
    processVarName String,
}
//customField - 1, if its standard 0 or null
//fieldType - 1, 2, 0
//refId IS - 1, BS - 2, CF - 3
entity StmtsConfig{
    refId Integer,
    itemName String,
    itemType String,
    remarks String
    customField Integer,
    fieldType String,
    customFieldId Long,
    serialNo String,
    operator String,
    formula String,
    keyVar String,
}

//refId IS - 1, BS - 2, CF - 3
//fieldKey is to store the serial no like item...
entity DoodilFieldsValues{
    refId Integer,
    fieldKey String,
    fieldName String,
    fieldValue String,
}

//category - Input - 1, Derived - 2, SubProcess - 3, MChannel - 4,
//pVarType - Income - 1, Expense - 2
//pValueType - Nominal - 1, % - 2, etc
//varDataType - Date, Percent, etc
//trackFlag - to track the fields in products
entity ProcessVars{
	varName String,
    varDesc String,
    keyVarFlag String,
    category String,
    proVarType Integer,
    proValueType Integer,
    varDataType String,
    trackFlag String,
    varUom String,
}

entity GenProcessChainFormula{
	strFormula String maxlength(2000),
    strEuation String maxlength(2000),
    derivedVar String,
    stepSeqNo Integer,
    parentId Integer
}

//variables and values will be
//stored in this
//referenceId and value will be
//table reference id and the unique id of the table
//DEPC - 1, DEP - 2
entity GenKeyValue{
    keyVar String,
    keyVal String,
    referenceId Long,
    referenceValue Integer,
    category String,
    remarks String,
    productId Long,
    deDataId Long,
    deMarketDataId Long,
}
//type - Dashboard, Sensitivity, etc
//chartAxis - xvalue|yvalue|
//charttype - pie, line ..
entity ReportConfigMaster {
	reportKey String,
	reportName String,
    reportType String,
    displayOrder Integer,
    reportDesc String,
    chartType String,
    chartAxis String,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}

entity ReportConfigData {
	fieldKey String,
    fieldName String,
    fieldPercent String,
    fieldRef String
    fieldRefSerialNo String,
    optOut String,
}

entity ReportValueMaster {
	caseId Long,
	deId Long,
	reportName String,
    reportDesc String,
    reportMonth String,
    reportQuarter String,
    reportYear String,
    projectionTerm String,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}

//feild type can used for future purpose
entity ReportValueData {
	fieldRef String,
	fieldName String,
    fieldValue String,
    fieldType String
}
//config data for each generated report
entity ReportValueConfig {
	fieldKey String,
    fieldName String,
    fieldPercent String,
    fieldRef String,
    fieldRefSerialNo String,
    projectionLvlCnt Integer,
    optOut String
}

entity StepGroup {
	stepGroupName String,
    groupDesc String,
    derivedVariable String,
}

entity StepGroupData {
	stepId Long,
}

//category - Cost, Price
entity GlobalVars{
	varName String,
    varDesc String,
    keyVarFlag String,
    category String,
    formula String,
}

entity ProductGlobalVars{
}

entity MarketChannelGlobalVars{
}

entity AssetGlobalVars{
}

relationship ManyToOne {
	StepGroup{gpChainsId(id)} to GenProcessChains,
    StepGroupData{stepGroup(id)} to StepGroup,
	ReportValueMaster{companyInfo(id)} to CompanyInfo,
    ReportValueConfig{doodilEntry(id)} to DoodilEntry,
    ReportValueConfig{rcm(id)} to ReportConfigMaster,
    ReportValueData{rvm(id)} to ReportValueMaster,
	ReportConfigMaster{companyInfo(id)} to CompanyInfo,
    ReportConfigData{rcm(id)} to ReportConfigMaster,
	MarketChannelAddlFields{processVars(id)} to ProcessVars,
    MarketChannelAddlFields{marketPriceDef(id)} to MarketPriceDef,
    MarketChannelProducts{psd(id)} to ProductServiceDef,
    MarketChannelProducts{mpDef(id)} to MarketPriceDef,    
    DoodilFieldsValues{doodilEntry(id)} to DoodilEntry,
    StmtsConfig{companyInfo(id)} to CompanyInfo,
    DoodilCases{companyInfo(id)} to CompanyInfo,
    DoodilEntry{companyInfo(id)} to CompanyInfo,
    ProdDefConfig{companyInfo(id)} to CompanyInfo,
    ProductServiceDef{companyInfo(id)} to CompanyInfo,
    ProductCategory{companyInfo(id)} to CompanyInfo,
    ProdDefConfig{proCat(id)} to ProductCategory,
    ProductServiceDef{proCat(id)} to ProductCategory,
    CompanyBudget{companyInfo(id)} to CompanyInfo,
    CompanyAssets{companyInfo(id)} to CompanyInfo,
    CompanyDebts{companyInfo(id)} to CompanyInfo,
    MarketPriceDef{companyInfo(id)} to CompanyInfo,
    ProcessVars{companyInfo(id)} to CompanyInfo,
    GenProcessChains{companyInfo(id)} to CompanyInfo,
    DoodilEntryData{doodilEntry(id)} to DoodilEntry,
    DoodilEntryMarketData{doodilEntry(id)} to DoodilEntry,
 	DoodilEntryData{psDef(id)} to ProductServiceDef,
    DoodilEntryPrices{doodilEntry(id)} to DoodilEntry,
 	DoodilEntryPrices{psDef(id)} to ProductServiceDef,
    DoodilEntryPrices{mpDef(id)} to MarketPriceDef,
    DoodilEntryMarketData{mpDef(id)} to MarketPriceDef,
    DoodilEntryMarketData{gpChainsId(id)} to GenProcessChains,
    DoodilEntryProcessChains{deData(id)} to DoodilEntryData,
    GenProcessChainFormula{gpChainsId(id)} to GenProcessChains,
    GPChainFormulaVars{gpcFormulaId(id)} to GenProcessChainFormula,
    DoodilEntryProcessChains{gpChainsId(id)} to GenProcessChains,
    ProductProcessChains{psd(id)} to ProductServiceDef,
    ProductProcessChains{gpc(id)} to GenProcessChains,
    CompanyUsers{compInfo(id)} to CompanyInfo,
    CompanyUsers{user(login)} to User,
    MarketProcessChains{mpDef(id)} to MarketPriceDef,
    MarketProcessChains{gpc(id)} to GenProcessChains,
    ProdKeyValue{psd(id)} to ProductServiceDef,
    ProductPalette{gpChainsId(id)} to GenProcessChains,
    CompanyDebtsAmortize{cd(id)} to CompanyDebts,
    CompanyAssetsMaintenance{ca(id)} to CompanyAssets,
    CompanyAssetsAccuDep{ca(id)} to CompanyAssets,
    CompanyBudgetData{companyBudget(id)} to CompanyBudget,
    GlobalVars{companyInfo(id)} to CompanyInfo,
    ProductGlobalVars{psd(id)} to ProductServiceDef,
    ProductGlobalVars{glVars(id)} to GlobalVars,
    MarketChannelGlobalVars{mpDef(id)} to MarketPriceDef,
    MarketChannelGlobalVars{glVars(id)} to GlobalVars,
    AssetGlobalVars{ca(id)} to CompanyAssets,
    AssetGlobalVars{glVars(id)} to GlobalVars    
}



// Set pagination options
paginate ProductServiceDef, MarketPriceDef, GenProcessChains, ProcessVars,CompanyAssetsAccuDep with infinite-scroll

dto * with mapstruct
